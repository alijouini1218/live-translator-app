name: Test Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  unit-tests:
    name: Unit & Integration Tests
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          
      - name: Install dependencies
        run: |
          cd apps/web
          npm ci
          
      - name: Run type checking
        run: |
          cd apps/web
          npm run typecheck
          
      - name: Run linting
        run: |
          cd apps/web
          npm run lint
          
      - name: Run unit tests
        run: |
          cd apps/web
          npm test -- --coverage --watchAll=false
        env:
          CI: true
          NODE_ENV: test
          
      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          file: ./apps/web/coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
          
  api-tests:
    name: API Route Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          
      - name: Install dependencies
        run: |
          cd apps/web
          npm ci
          
      - name: Test API routes
        run: |
          cd apps/web
          npm test -- --testPathPattern=__tests__/api --watchAll=false
        env:
          CI: true
          NODE_ENV: test
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          ELEVENLABS_API_KEY: ${{ secrets.ELEVENLABS_API_KEY }}
          STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
          STRIPE_WEBHOOK_SECRET: ${{ secrets.STRIPE_WEBHOOK_SECRET }}
          NEXT_PUBLIC_SUPABASE_URL: https://test.supabase.co
          SUPABASE_ANON_KEY: test-anon-key
          SUPABASE_SERVICE_ROLE: test-service-role
          
  e2e-tests:
    name: End-to-End Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          
      - name: Install dependencies
        run: |
          cd apps/web
          npm ci
          
      - name: Install Playwright
        run: |
          cd apps/web
          npx playwright install --with-deps
          
      - name: Build application
        run: |
          cd apps/web
          npm run build
        env:
          NODE_ENV: production
          NEXT_PUBLIC_SUPABASE_URL: https://test.supabase.co
          NEXT_PUBLIC_SUPABASE_ANON_KEY: test-anon-key
          NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY: pk_test_123
          
      - name: Run E2E tests
        run: |
          cd apps/web
          npm run test:e2e
        env:
          CI: true
          NODE_ENV: test
          
      - name: Upload E2E test results
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: playwright-report
          path: apps/web/playwright-report/
          retention-days: 30
          
  lighthouse-audit:
    name: Performance Audit
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          
      - name: Install dependencies
        run: |
          cd apps/web
          npm ci
          
      - name: Build application
        run: |
          cd apps/web
          npm run build
        env:
          NODE_ENV: production
          
      - name: Run Lighthouse audit
        uses: treosh/lighthouse-ci-action@v10
        with:
          configPath: './apps/web/lighthouserc.json'
          uploadArtifacts: true
          temporaryPublicStorage: true
          
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Run npm audit
        run: |
          cd apps/web
          npm audit --audit-level moderate
          
      - name: Run Snyk security scan
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high --file=apps/web/package.json
          
  accessibility-tests:
    name: Accessibility Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          
      - name: Install dependencies
        run: |
          cd apps/web
          npm ci
          
      - name: Build and start application
        run: |
          cd apps/web
          npm run build
          npm start &
          sleep 10
        env:
          NODE_ENV: production
          
      - name: Run accessibility tests
        run: |
          cd apps/web
          npx pa11y http://localhost:3000 --reporter json > accessibility-report.json
          
      - name: Upload accessibility report
        uses: actions/upload-artifact@v4
        with:
          name: accessibility-report
          path: apps/web/accessibility-report.json
          
  integration-smoke-tests:
    name: Integration Smoke Tests
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.event_name == 'pull_request'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          
      - name: Install dependencies
        run: |
          cd apps/web
          npm ci
          
      - name: Run smoke tests
        run: |
          cd apps/web
          npm test -- --testNamePattern="smoke" --watchAll=false
        env:
          CI: true
          NODE_ENV: test
          # Use actual test environment credentials for smoke tests
          OPENAI_API_KEY: ${{ secrets.OPENAI_TEST_API_KEY }}
          ELEVENLABS_API_KEY: ${{ secrets.ELEVENLABS_TEST_API_KEY }}
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.SUPABASE_TEST_URL }}
          SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_TEST_ANON_KEY }}
          
  deployment-preview:
    name: Deploy Preview
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Deploy to Vercel Preview
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./apps/web
          scope: ${{ secrets.VERCEL_ORG_ID }}
          
      - name: Run E2E tests against preview
        run: |
          cd apps/web
          npm run test:e2e -- --config playwright-preview.config.ts
        env:
          PLAYWRIGHT_BASE_URL: ${{ steps.deploy.outputs.preview-url }}
          
  notify-results:
    name: Notify Test Results
    runs-on: ubuntu-latest
    needs: [unit-tests, api-tests, e2e-tests, lighthouse-audit, accessibility-tests]
    if: always()
    
    steps:
      - name: Notify on success
        if: ${{ needs.unit-tests.result == 'success' && needs.api-tests.result == 'success' && needs.e2e-tests.result == 'success' }}
        run: |
          echo "✅ All tests passed successfully!"
          
      - name: Notify on failure
        if: ${{ needs.unit-tests.result == 'failure' || needs.api-tests.result == 'failure' || needs.e2e-tests.result == 'failure' }}
        run: |
          echo "❌ Some tests failed. Please check the logs."
          exit 1